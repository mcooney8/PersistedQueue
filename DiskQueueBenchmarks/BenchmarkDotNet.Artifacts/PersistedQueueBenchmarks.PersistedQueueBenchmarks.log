// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false in /Users/Michael/Projects/DiskQueue/DiskQueueBenchmarks/bin/Release/netcoreapp2.1/c3c08bde-02c5-4675-9405-e585c615b055
// command took 1.76s and exited with 0
// start dotnet build -c Release  /p:UseSharedCompilation=false in /Users/Michael/Projects/DiskQueue/DiskQueueBenchmarks/bin/Release/netcoreapp2.1/c3c08bde-02c5-4675-9405-e585c615b055
// command took 4.95s and exited with 0
// ***** Done, took 00:00:07 (7.06 sec)   *****
// Found benchmarks:
//   PersistedQueueBenchmarks.PersistentQueueSqliteFilePersistence: DefaultJob [totalItems=1000, itemsToKeepInMemory=100, useLargeData=True]
//   PersistedQueueBenchmarks.PersistentQueueInMemoryPersistence: DefaultJob [totalItems=1000, itemsToKeepInMemory=100, useLargeData=True]
//   PersistedQueueBenchmarks.NormalQueue: DefaultJob [totalItems=1000, itemsToKeepInMemory=100, useLargeData=True]

// **************************
// Benchmark: PersistedQueueBenchmarks.PersistentQueueSqliteFilePersistence: DefaultJob [totalItems=1000, itemsToKeepInMemory=100, useLargeData=True]
// *** Execute ***
// Launch: 1 / 1
Failed to set up high priority. Make sure you have the right permissions. Message: Permission denied
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.1.2 (CoreCLR 4.6.26628.05, CoreFX 4.6.26629.01), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 385000.00 ns, 385.0000 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.DllNotFoundException: Unable to load shared library 'sqlite3.dll' or one of its dependencies. In order to help diagnose loading problems, consider setting the DYLD_PRINT_LIBRARIES environment variable: dlopen(libsqlite3.dll, 1): image not found
   at Sqlite.Fast.Sqlite.Open(String filename, IntPtr& conn)
   at Sqlite.Fast.Connection..ctor(String dbFilePath)
   at PersistedQueue.Sqlite.SqlitePersistence`1..ctor(String dbFilePath)
   at PersistedQueueBenchmarks.PersistedQueueBenchmarks.PersistentQueueSqliteFilePersistence()
   at BenchmarkDotNet.Autogenerated.Runnable_0.WorkloadActionNoUnroll(Int64 invokeCount) in /Users/Michael/Projects/DiskQueue/DiskQueueBenchmarks/bin/Release/netcoreapp2.1/c3c08bde-02c5-4675-9405-e585c615b055/c3c08bde-02c5-4675-9405-e585c615b055.notcs:line 730
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_0.Run(IHost host, String benchmarkName) in /Users/Michael/Projects/DiskQueue/DiskQueueBenchmarks/bin/Release/netcoreapp2.1/c3c08bde-02c5-4675-9405-e585c615b055/c3c08bde-02c5-4675-9405-e585c615b055.notcs:line 147
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in /Users/Michael/Projects/DiskQueue/DiskQueueBenchmarks/bin/Release/netcoreapp2.1/c3c08bde-02c5-4675-9405-e585c615b055/c3c08bde-02c5-4675-9405-e585c615b055.notcs:line 62
// AfterAll
ExitCode != 0
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!


// **************************
// Benchmark: PersistedQueueBenchmarks.PersistentQueueInMemoryPersistence: DefaultJob [totalItems=1000, itemsToKeepInMemory=100, useLargeData=True]
// *** Execute ***
// Launch: 1 / 1
Failed to set up high priority. Make sure you have the right permissions. Message: Permission denied
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.1.2 (CoreCLR 4.6.26628.05, CoreFX 4.6.26629.01), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 324000.00 ns, 324.0000 us/op
WorkloadJitting  1: 1 op, 58140000.00 ns, 58.1400 ms/op

WorkloadPilot    1: 2 op, 84171000.00 ns, 42.0855 ms/op
WorkloadPilot    2: 3 op, 125767000.00 ns, 41.9223 ms/op
WorkloadPilot    3: 4 op, 165680000.00 ns, 41.4200 ms/op
WorkloadPilot    4: 5 op, 210687000.00 ns, 42.1374 ms/op
WorkloadPilot    5: 6 op, 250398000.00 ns, 41.7330 ms/op
WorkloadPilot    6: 7 op, 292240000.00 ns, 41.7486 ms/op
WorkloadPilot    7: 8 op, 339446000.00 ns, 42.4308 ms/op
WorkloadPilot    8: 9 op, 385930000.00 ns, 42.8811 ms/op
WorkloadPilot    9: 10 op, 419112000.00 ns, 41.9112 ms/op
WorkloadPilot   10: 11 op, 462687000.00 ns, 42.0625 ms/op
WorkloadPilot   11: 12 op, 497752000.00 ns, 41.4793 ms/op
ExitCode != 0
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!


// **************************
// Benchmark: PersistedQueueBenchmarks.NormalQueue: DefaultJob [totalItems=1000, itemsToKeepInMemory=100, useLargeData=True]
// *** Execute ***
// Launch: 1 / 1
Failed to set up high priority. Make sure you have the right permissions. Message: Permission denied
Process dotnet.exe (Id:13166) is still running, will now be killed
ExitCode != 0
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!


// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts/results/PersistedQueueBenchmarks.PersistedQueueBenchmarks-report.csv
  BenchmarkDotNet.Artifacts/results/PersistedQueueBenchmarks.PersistedQueueBenchmarks-report-github.md
  BenchmarkDotNet.Artifacts/results/PersistedQueueBenchmarks.PersistedQueueBenchmarks-report.html

// * Detailed results *
PersistedQueueBenchmarks.PersistentQueueSqliteFilePersistence: DefaultJob [totalItems=1000, itemsToKeepInMemory=100, useLargeData=True]
Runtime = ; GC = 
There are not any results runs

PersistedQueueBenchmarks.PersistentQueueInMemoryPersistence: DefaultJob [totalItems=1000, itemsToKeepInMemory=100, useLargeData=True]
Runtime = ; GC = 
There are not any results runs

PersistedQueueBenchmarks.NormalQueue: DefaultJob [totalItems=1000, itemsToKeepInMemory=100, useLargeData=True]
Runtime = ; GC = 
There are not any results runs

// * Summary *

BenchmarkDotNet=v0.11.3, OS=macOS Mojave 10.14 (18A391) [Darwin 18.0.0]
Intel Core i7-4870HQ CPU 2.50GHz (Haswell), 1 CPU, 8 logical and 4 physical cores
.NET Core SDK=2.1.302
  [Host] : .NET Core 2.1.2 (CoreCLR 4.6.26628.05, CoreFX 4.6.26629.01), 64bit RyuJIT  [AttachedDebugger]


                               Method | totalItems | itemsToKeepInMemory | useLargeData | Mean | Error |
------------------------------------- |----------- |-------------------- |------------- |-----:|------:|
 PersistentQueueSqliteFilePersistence |       1000 |                 100 |         True |   NA |    NA |
   PersistentQueueInMemoryPersistence |       1000 |                 100 |         True |   NA |    NA |
                          NormalQueue |       1000 |                 100 |         True |   NA |    NA |

Benchmarks with issues:
  PersistedQueueBenchmarks.PersistentQueueSqliteFilePersistence: DefaultJob [totalItems=1000, itemsToKeepInMemory=100, useLargeData=True]
  PersistedQueueBenchmarks.PersistentQueueInMemoryPersistence: DefaultJob [totalItems=1000, itemsToKeepInMemory=100, useLargeData=True]
  PersistedQueueBenchmarks.NormalQueue: DefaultJob [totalItems=1000, itemsToKeepInMemory=100, useLargeData=True]

// * Warnings *
Environment
  Summary -> Benchmark was executed with attached debugger

// * Legends *
  totalItems          : Value of the 'totalItems' parameter
  itemsToKeepInMemory : Value of the 'itemsToKeepInMemory' parameter
  useLargeData        : Value of the 'useLargeData' parameter
  Mean                : Arithmetic mean of all measurements
  Error               : Half of 99.9% confidence interval
  1 ns                : 1 Nanosecond (0.000000001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
Run time: 00:00:04 (4.88 sec), executed benchmarks: 3

// * Artifacts cleanup *
